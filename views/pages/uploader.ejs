<!DOCTYPE html>
<html lang="en">
	<head>
		<%- include('../partials/head'); %>
		<style>
			#upload {
				opacity: 0;
			}

			#uploadLabel {
				position: absolute;
				top: 50%;
				left: 1rem;
				transform: translateY(-50%);
			}

			.image-area {
				border: 2px dashed rgba(207, 207, 207, 0.7);
				padding: 1rem;
				position: relative;
			}

			.image-area::before {
				content: 'Uploaded image result';
				color: black;
				font-weight: bold;
				text-transform: uppercase;
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				font-size: 0.8rem;
				z-index: 1;
			}

			.image-area img {
				z-index: 2;
				position: relative;
			}
		</style>
	</head>
	<header><%- include('../partials/header'); %></header>
	<body>
		<main id="content" class="container py-5">
			<div class="row py-4">
				<div class="col-lg-6 mx-auto">
					<div id="uploadInfoAlert" style="display: none" class="alert"></div>
					<div id="uploadLogin">
						<form id="uploadForm">
							<div class="input-group mb-3 px-2 py-2 rounded-pill shadow-sm">
								<input id="upload" type="file" class="form-control border-0" />
								<label id="uploadLabel" for="upload" class="font-weight-light text-muted"
									>Choose file</label
								>
								<div class="input-group-append">
									<label for="upload" class="btn btn-light m-0 rounded-pill px-4">
										<small class="text-uppercase font-weight-bold text-muted"> Choose file </small>
									</label>
								</div>
							</div>
							<div id="uploadBTN" style="display: none" class="text-center">
								<button type="submit" class="btn btn-outline-success">Upload</button>
							</div>
						</form>
						<p class="font-italic text-black text-center mt-2" id="uploadInfo">
							The uploaded image will be rendered inside the box below.
						</p>
						<div class="image-area mt-4">
							<img
								id="imageResult"
								src="#"
								alt=""
								class="img-fluid rounded shadow-sm mx-auto d-block"
							/>
						</div>
					</div>
				</div>
			</div>
		</main>
		<footer><%- include('../partials/footer'); %></footer>
	</body>
	<%- include('../partials/scripts'); %>
	<script>
		const uploadLogin = document.querySelector('#uploadLogin');
		const loginInfo = document.querySelector('#loginInfo');
		const uploadInfo = document.querySelector('#uploadInfo');
		const uploadBTN = document.querySelector('#uploadBTN');
		const input = document.querySelector('#upload');
		const uploadForm = document.querySelector('#uploadForm');
		const imageResult = document.querySelector('#imageResult');
		const uploadLabel = document.querySelector('#uploadLabel');

		uploadForm.addEventListener('submit', async (event) => {
			event.preventDefault();
			const image = input.files[0];
			const body = new FormData();
			body.append('image', image);
			const response = await post('upload', body);
			if (response.success == false) {
				clearUploadContent();
				alert('#uploadInfoAlert', false, response.json.error.message);
			} else {
				alert('#uploadInfoAlert', true, 'Image Uploaded!', clearUploadContent, 2000);
			}
		});

		function clearUploadContent() {
			imageResult.setAttribute('src', '#');
			uploadLabel.textContent = 'File name: ';
			uploadBTN.style.display = 'none';
			uploadInfo.style.display = '';
		}

		document.querySelector('#upload').addEventListener('change', () => {
			if (input.files && input.files[0]) {
				const reader = new FileReader();
				reader.onload = (e) => {
					imageResult.setAttribute('src', e.target.result);
				};
				reader.readAsDataURL(input.files[0]);
				uploadBTN.style.display = '';
				uploadInfo.style.display = 'none';
			}
		});
		input.addEventListener('change', (event) => {
			const input = event.srcElement;
			const fileName = input.files[0].name;
			uploadLabel.textContent = 'File name: ' + fileName;
		});
	</script>
</html>
